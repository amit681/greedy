#include<bits/stdc++.h>
using namespace std;

bool pattern(pair<int,int>p1,pair<int,int>p2){
return p1.second<p2.second;
}
int main(){
ios_base::sync_with_stdio(false);
cin.tie(NULL);
cout.tie(NULL);
int t;
cin>>t;
while(--t>=0){
int n;
cin>>n;
int a,b;
vector<pair<int,int>>v;
for(int i=0;i<n;i++){
cin>>a>>b;
v.push_back(make_pair(a,b));
}
sort(v.begin(),v.end(),pattern);
int flag=0,alice=0,bob=0;
while(v.size()!=0){
int t2=-1,count=0;
for(auto it=v.begin();it!=v.end();it=it){
if((it->first)>t2&&(it->second)>t2){
count++;
t2=it->second;
v.erase(it);
}
else it++;
}
if(flag==0){
alice=alice^count;
flag=1;
}
else{
bob=bob^count;
flag=0;
}
}
if(alice>bob) cout<<"Alice"<<"\n";
else if(alice<bob) cout<<"Bob"<<"\n";
else cout<<"Tie"<<"\n";
}
}



https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/hectic-game-2e74ada4/
